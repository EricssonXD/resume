// colors
$primary: #3ba8fe;
$primary-content: #00203a;
$primary-dark: #0891fe;
$primary-light: #6ebffe;

$secondary: #913bfe;
$secondary-content: #ffffff;
$secondary-dark: #7508fe;
$secondary-light: #ad6efe;

$background: #1a1a1a;
$foreground: #262626;
$border: #404040;

$copy: #fbfbfb;
$copy-light: #d9d9d9;
$copy-lighter: #a6a6a6;

$success: #3bfe3b;
$warning: #fefe3b;
$error: #fe3b3b;
$success-content: #003a00;
$warning-content: #3a3a00;
$error-content: #ffffff;


//fonts
$my-prettyfont: 'DM Sans',
    sans-serif;

//text
$small-font: 200 1rem/1.4 $my-prettyfont;
$large-font: 700 2rem/1.2 $my-prettyfont;
$title-font: 300 4rem/1.4 $my-prettyfont;
$paragraph-font: 300 1.3rem/1.3 $my-prettyfont;
$button-font: 400 1rem/1.3 $my-prettyfont;

$mobile-width: 600px;

// Shadows

//Function to create text shadows with a color as a parameter
@function text-shadow($color, $opacity: 1) {
    @return 0 0 5px rgba($color,  $opacity),
        0 0 10px rgba($color,  $opacity),
        0 0 15px rgba($color,  $opacity),
        0 0 20px rgba($color,  $opacity),
        0 0 30px rgba($color,  $opacity),
        0 0 40px rgba($color,  $opacity),
        0 0 50px rgba($color,  $opacity),
        0 0 75px rgba($color,  $opacity);
}

@function text-shadow-filter($color, $opacity: 1, $steps: 5, $opacityOffset: 0.2,) {
    $value: ();
    @for $i from 1 through $steps {
        $num: ($i + max($i - 4, 0))* 5px;
        $calOpacity: (1-$opacityOffset)/$steps*$i + $opacityOffset; // +0.5 to offset the opacity

        $theShadow: drop-shadow(0 0 $num rgba($color, $calOpacity));
        $value: append($value, $theShadow, space)
    }
    @return $value;
}

* {
    color: $copy;
}